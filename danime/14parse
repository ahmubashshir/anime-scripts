#!/bin/bash
# shellcheck disable=SC2086,SC1091,SC1090,SC2154
((def_parse)) && return 0 || def_parse=1
. libbash
. spinner
. 01include
DEBUG=${DEBUG:-false}
#start:code
SUPPORTED_HOSTS='trollvid|mp4upload|vidstreaming|xstreamcdn|gogo server|mixdrop|cloud9'
get_effective_url()
{
	xargs curl --config /dev/null -ILksXGET -o /dev/null -w '%{url_effective}\n' 2> /dev/null | grep '^http'
}
get_url()
{
	local ep_file_host ep_file_id n try=0 url
	ep_file_host=$(echo "$@" | jq -r '.host')
	ep_file_id=$(echo "$@" | jq -r '.id' | xargs basename -a)
	if ! {
		echo "$SUPPORTED_HOSTS" | grep -q "$ep_file_host"
	}; then
		echo "unimplemented:$ep_file_host"
		return 1
	fi
	for n in $ep_file_id; do
		if [ -n "$(type -t ${ep_file_host// /+}:get_url || type -w ${ep_file_host// /+}:get_url)" ]; then
			url=""
			try=0
			while [[ -z $url ]] && ((try++ < 5)); do
				((try > 1)) && sleep 2
				url="$(${ep_file_host// /+}:get_url "${n}" "$2")"
			done
			echo "$url"
		else
			echo "unimplemented:${ep_file_host/_/.}"
			break
		fi
	done
}
beautify_js()
{
	js-beautify -xn -e \\n -k --brace-style=expand - 2> /dev/null
}

mp4upload:get_url()
{
	curl --config /dev/null -ks "https://www.mp4upload.com/embed-$1.html" | grep 'eval(' | cut -d\> -f2- | beautify_js | sed -znE 's@.*(http(s|)://[[:alnum:]]+.mp4upload.com:[[:digit:]]+/[[:lower:]]/[[:alnum:]]+/[[:alnum:]-]+.mp4).*@\1\n@p'
}

xstreamcdn:get_url()
{
	curl --config /dev/null -sX POST "https://fcdn.stream/api/source/$1" --data "r=https://fcdn.stream/f/$1" --data 'd=fcdn.stream' | jq -r 'select(.success == true).data|[ reverse[]|select(.label == "720p" or .label == "480p")][0].file' 2> /dev/null | get_effective_url
}

trollvid:get_url()
{
	local token
	token=$(
		curl --silent --fail --config /dev/null -s "$2" |
			sed -nE "/xToken/s/.*'(.*)'.*/\1/p"
	)
	[ -z "$token" ] && return
	[ "$token" ] &&
		token=$(
			curl "https://mp4.sh/embed/${1}${token}" \
				--config /dev/null -s \
				-H 'Referer: https://ww5.dubbedanime.net/' |
				sed -nE "/token: /s/.*'(.*)'.*/\1/p"
		)
	[ -z "$token" ] && return
	[ "$token" ] &&
		curl "https://mp4.sh/v/$1" \
			-H 'Origin: https://mp4.sh' \
			--config /dev/null -s \
			--data-raw "token=$token" |
		jq -r 'select(.success == true).file' 2> /dev/null
}

vidstreaming:get_url()
{
	curl --config /dev/null -s "https://gogo-stream.com/ajax.php?id=$1&refer=none" | jq -r 'if has("source_bk") and ( .source_bk[]|length >0 ) then .source_bk else .source end|.[0]|.file' | get_effective_url
}

gogo+server:get_url()
{
	curl --config /dev/null -s "https://gogo-stream.com/ajax.php?id=$1" | jq -r 'if has("source_bk") and ( .source_bk[]|length >0 ) then .source_bk else .source end|.[0]|.file' | get_effective_url
}

mixdrop:get_url()
{
	curl --config /dev/null -s "https://mixdrop.to/e/$1" | grep '^eval' | beautify_js | grep MDCore.wurl | sed -E 's@.* = "//(.*)".*@https://\1@'
}

cloud9:get_url()
{
	curl --config /dev/null -s "https://api.cloud9.to/stream/$1" | jq -r 'select(.success == true).data.sources|[.[]|select(.height<=720)][0].file'
}
#end:code
if ! {
	[[ -n $ZSH_EVAL_CONTEXT && $ZSH_EVAL_CONTEXT =~ :file$ ]] || {
		[[ -n $BASH_VERSION                                                         ]] || [[ $0 =~ bin/bashdb$ ]]
	}                                                                                                             && {
		return                                                                                                                   0 2> /dev/null
	}
}; then
	(($# == 3)) || exit
	remote=$1
	shift
	$remote:get_url "$@"
fi
