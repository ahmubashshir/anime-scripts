#!/bin/bash
((def_db)) && return 0 || def_db=1
# shellcheck disable=SC2015
DEBUG=${DEBUG:-false}
. 00header
#start:code
da_db()
{
	local CACHE_FILE act=$1
	shift
	if [ -n "$AP" ]; then
		CACHE_FILE="$ANIME_PATH/.danime_db.json"
	else
		CACHE_FILE="$MEDIA_ROOT/.danime_db.json"
	fi
	if ! {
		jq 'keys' "$CACHE_FILE" 2> /dev/null | grep -q '\['
	}; then
		echo '{}' > "$CACHE_FILE"
	fi
	while [[ $1 =~ .*=.* ]]; do
		eval "local $1"
		shift
	done
	"da_db_$act" "$@"
}
da_db_add()
{

	data="$(jq '. * {"'"$id"'":{ "title":null ,"path":null,"url":null,"total":null,"saved":null}}' "$CACHE_FILE")"
	da_db_write "$data"
}
da_db_list()
{
	for id in $(jq -r 'keys[] | tonumber | @sh' "$CACHE_FILE"); do
		echo "$id"
	done
}
da_db_set()
{
	if da_db_has; then
		data="$(jq '."'"$id"'".'"$1"'='"$2" "$CACHE_FILE")"
		da_db_write "$data"
	fi
}
da_db_get()
{
	{
		jq -re ".\"$id\".$*" "$CACHE_FILE" || echo 0
	} | tail -1
}

da_db_has()
{
	jq -e '."'"$id"'"' "$CACHE_FILE" &> /dev/null
}

da_db_del()
{
	if da_db_has; then
		data="$(jq 'del(."'"$id"'")' "$CACHE_FILE")"
		da_db_write "$data"
	fi
}
da_db_write()
{
	if [ -n "$@" ]; then
		echo "$@" > "$CACHE_FILE~"
		if jq . "$CACHE_FILE~" 2>&1 > /dev/null; then
			mv "$CACHE_FILE~" "$CACHE_FILE"
		else
			rm "$CACHE_FILE~"
		fi
	fi
}
#end:code
if ! ([[ -n $ZSH_EVAL_CONTEXT && $ZSH_EVAL_CONTEXT =~ :file$ ]] \
	|| [[ -n $BASH_VERSION ]] && (return 0 2> /dev/null)); then
	da_db "$@"
fi
