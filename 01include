#!/bin/bash
# shellcheck disable=SC2015
DEBUG=${DEBUG:-false}
#start:code
ellipsis() {
	python3 -c "from sys import argv
l=int(int(argv[1])/2)
if len(' '.join(argv[2:]))>l*2:
	print(' '.join(argv[2:])[0:l],'...',' '.join(argv[2:])[-l:],sep='')
else:
	print(' '.join(argv[2:]),sep='')" "$@"
}
clear_line() {
	tput sc
	for ((i = 0; i <= $1; i++)); do
		printf "\r%-${COLUMNS}s"
	done
	tput rc
}
expand_limit() {
	$DEBUG && set -x
	if [[ $1 =~ ^[[:digit:]]+-$ ]]; then
		local n=${1%%-*}
		for ((i = n; i <= $2; i++)); do
			((i <= $2)) && printf "%d " "$i"
		done
	else
		for n in $(echo "$1" | cut -d, -f1- --output-delimiter=' '); do
			if [[ $n =~ ^[[:digit:]]+-[[:digit:]]+$ ]]; then
				i=${n%%-*}
				j=${n##*-}
				((j <= $2)) && expand_limit "$i-" "$j" || expand_limit "$i-" "$2"
			elif [[ $n =~ ^[[:digit:]]+$ ]]; then
				((n <= $2)) && printf "%d " "$n"
			else
				expand_limit "$n" "$2"
			fi
		done
	fi | tr \  \\n | sort -nu | tr \\n \  | sed 's| $|\n|g'
	$DEBUG && set +x
	return 0
}
validate_limit() {
	if ! echo "$1" | grep -q '^[[:digit:],-]$'; then
		return 1
	fi
	if [[ $1 =~ ^[[:digit:]]-$ ]]; then
		return 0
	elif [[ $1 =~ [[:digit:]]+-[[:digit:]]+ ]]; then
		local i=${1%%-*}
		local j=${1##*-}
		if ((i < j)); then
			return 0
		else
			return 1
		fi
	else
		return 0
	fi
}
anime_cover() {
	local ep_count
	local anime_cover_img
	ep_count=$1
	anime_cover_img=$2
	#ext=${anime_cover_img##*.}
	if ((ep_count > 1)) && [ ! -e folder.jpg ]; then
		wget --no-check-certificate -nv "$anime_cover_img" -cO "cover.jpg"
		if ! grep -q cover.jpg .hidden &> /dev/null; then
			echo cover.jpg >> .hidden
		fi
	fi
}
replace_invalid() {
	if [[ $1 == dir ]];then
		sed 's|<|ï¼œ|g;s|>|ï¼ž|g;s|:|êž‰|g;s|\"|ï¼‚|g;s|/|â§¸|g;s|\\|â§¹|g;s|?|ï¼Ÿ|g;s|\||â«¿|g;s|\*|ðŸžµ|g'
	else
		sed 's|<|ï¼œ|g;s|>|ï¼ž|g;s|:|êž‰|g;s|\"|ï¼‚|g;s|/|â§¸|g;s|\\|â§¹|g;s|?|ï¼Ÿ|g;s|\||â«¿|g;s|\*|ðŸžµ|g;s| |-|g'
	fi
}
#end:code

